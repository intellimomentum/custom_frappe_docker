image: docker:latest

stages:
  - build
  - deploy

services:
  - docker:dind

build_latest:
  stage: build
  only:
    #- main
    - Customize
    - Production
  before_script:
    # Install os dependencies
    - apk --update add openssh-client git jq curl
    # Login to container registry
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    # Install buildx
    - mkdir -p $HOME/.docker/cli-plugins
    - curl -sSLo $HOME/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.8.2/buildx-v0.8.2.linux-amd64
    - chmod +x ~/.docker/cli-plugins/docker-buildx
    - docker buildx create --name ci_build_latest --use
  script:
    - ./ci/clone-apps.sh
    - export FRAPPE_VERSION=$(jq -r .frappe base_versions.json)
    - export ERPNEXT_VERSION=$(jq -r .erpnext base_versions.json)
    - export VERSION=latest
    - export REGISTRY_NAME=${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}
    - export BACKEND_IMAGE_NAME=worker
    - export FRONTEND_IMAGE_NAME=nginx
    - docker buildx bake --push
    # Cleanup runner
    - docker buildx stop ci_build_latest
    - docker buildx rm ci_build_latest
    - docker volume prune -f

build_version:
  stage: build
  only:
    refs:
      #- main
      - Customize
      - Production
    changes:
      - version.txt
  before_script:
    # Install os dependencies
    - apk --update add openssh-client git jq curl
    # Login to container registry
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    # Install buildx
    - mkdir -p $HOME/.docker/cli-plugins
    - curl -sSLo $HOME/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.8.2/buildx-v0.8.2.linux-amd64
    - chmod +x ~/.docker/cli-plugins/docker-buildx
    - docker buildx create --name ci_build_version --use
  script:
    - ./ci/clone-apps.sh
    - export FRAPPE_VERSION=$(jq -r .frappe base_versions.json)
    - export ERPNEXT_VERSION=$(jq -r .erpnext base_versions.json)
    - export VERSION=$(cat version.txt)
    - export REGISTRY_NAME=${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}
    - export BACKEND_IMAGE_NAME=worker
    - export FRONTEND_IMAGE_NAME=nginx
    - docker buildx bake --push
    # Cleanup runner
    - docker buildx stop ci_build_version
    - docker buildx rm ci_build_version
    - docker volume prune -f
