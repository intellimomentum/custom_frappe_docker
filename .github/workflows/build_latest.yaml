name: Build latest images

on: 
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning' 
        type: choice
        options:
        - info
        - warning
        - debug 
      print_tags:
        description: 'True to print to STDOUT'
        required: true 
        type: boolean 
      tags:
        description: 'Test scenario tags'
        required: true 
        type: string
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true 
  push:
    branches:
      # - main
      - Customize
      - Production


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Clone custom apps
        run: ./ci/clone-apps.sh
        env:
          username: ${{ github.actor }}
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PAT }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Base Versions
        id: get-base-versions
        run: |
          echo "::set-output name=FRAPPE_VERSION::$(jq -r .frappe base_versions.json)"
        #  echo "::set-output name=ERPNEXT_VERSION::$(jq -r .erpnext base_versions.json)"
      - name: Get Repo
        id: get-repo
        run: |
          echo "::set-output name=REPOSITORY::${GITHUB_REPOSITORY#*/}"
          echo "::set-output name=USEDBRANCH::${github.head_ref || github.ref_name}"

      - name: downcase BRANCH
        run: |
          echo 'print("USEDBRANCH=${{github.head_ref || github.ref_name}}".upper())' | python3.9 -) >> $GITHUB_ENV

      - name: Push
        uses: docker/bake-action@v2.3.0
        with:
          push: true
          no-cache: true
          # set: "*.platform=linux/amd64,linux/arm64"
        env:
          FRAPPE_VERSION: ${{ steps.get-base-versions.outputs.FRAPPE_VERSION }}
          ERPNEXT_VERSION: ${{ steps.get-base-versions.outputs.ERPNEXT_VERSION }}
          REGISTRY_NAME: ghcr.io/${{ github.repository_owner }}/custom_frappe_docker
          VERSION: latest
          BACKEND_IMAGE_NAME: ${{ steps.get-repo.outputs.REPOSITORY }}/worker-${{ USEDBRANCH }}
          FRONTEND_IMAGE_NAME: ${{ steps.get-repo.outputs.REPOSITORY }}/nginx-${{ USEDBRANCH }}
