name: Build tagged images

on:
  workflow-dispatch:
    branches:
      # - main
      - Customize
      - Production
  push:
    branches:
      # - main
      - Customize
      - Production
    paths:
      - version.txt

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Clone custom apps
        run: ./ci/clone-apps.sh
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Base Versions
        id: get-base-versions
        run: |
          echo "FRAPPE_VERSION=$(jq -r .frappe base_versions.json)" >> $GITHUB_STATE
          echo "ERPNEXT_VERSION=$(jq -r .erpnext base_versions.json)" >> $GITHUB_STATE

      - name: Get Version
        id: get-version
        run: echo "VERSION=$(cat version.txt)" >> $GITHUB_STATE

      - name: Get Repo
        id: get-repo
        run: echo "REPOSITORY=${GITHUB_REPOSITORY#*/}" >> $GITHUB_STATE

      - name: Push
        uses: docker/bake-action@v2.3.0
        with:
          push: true
          no-cache: true
          # set: "*.platform=linux/amd64,linux/arm64"
        env:
          FRAPPE_VERSION: ${{ steps.get-base-versions.outputs.FRAPPE_VERSION }}
          ERPNEXT_VERSION: ${{ steps.get-base-versions.outputs.ERPNEXT_VERSION }}
          REGISTRY_NAME: ghcr.io/${{ github.repository_owner }}
          VERSION: ${{ steps.get-version.outputs.VERSION }}
          BACKEND_IMAGE_NAME: ${{ steps.get-repo.outputs.REPOSITORY }}/worker
          FRONTEND_IMAGE_NAME: ${{ steps.get-repo.outputs.REPOSITORY }}/nginx
